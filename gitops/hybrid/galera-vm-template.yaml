kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: rhel8-mariadb
  labels:
    app.kubernetes.io/part-of: hyperconverged-cluster
    template.kubevirt.io/version: v0.29.4
    app.kubernetes.io/version: 4.16.6
    template.kubevirt.io/type: vm
    vm.kubevirt.io/template: rhel8-server-medium
    app.kubernetes.io/component: templating
    app.kubernetes.io/managed-by: ssp-operator
    flavor.template.kubevirt.io/medium: 'true'
    os.template.kubevirt.io/rhel8.0: 'true'
    os.template.kubevirt.io/rhel8.1: 'true'
    os.template.kubevirt.io/rhel8.2: 'true'
    app.kubernetes.io/name: custom-templates
    os.template.kubevirt.io/rhel8.10: 'true'
    os.template.kubevirt.io/rhel8.3: 'true'
    os.template.kubevirt.io/rhel8.4: 'true'
    os.template.kubevirt.io/rhel8.5: 'true'
    vm.kubevirt.io/template.namespace: openshift
    os.template.kubevirt.io/rhel8.6: 'true'
    workload.template.kubevirt.io/server: 'true'
    os.template.kubevirt.io/rhel8.7: 'true'
    os.template.kubevirt.io/rhel8.8: 'true'
    os.template.kubevirt.io/rhel8.9: 'true'
  annotations:
    template.kubevirt.io/provider: ''
    template.kubevirt.io/provider-url: 'https://www.redhat.com'
    template.kubevirt.io/containerdisks: |
      registry.redhat.io/rhel8/rhel-guest-image
    template.kubevirt.io/version: v1alpha1
    openshift.io/display-name: MariaDB Galera cluster based on RHEL8
    openshift.io/documentation-url: 'https://github.com/kubevirt/common-templates'
    template.kubevirt.io/images: |
      https://access.redhat.com/downloads/content/479/ver=/rhel---8/8.6/x86_64/product-software
    operator-sdk/primary-resource-type: SSP.ssp.kubevirt.io
    defaults.template.kubevirt.io/disk: rootdisk
    name.os.template.kubevirt.io/rhel8.0: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.1: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.2: Red Hat Enterprise Linux 8.0 or higher
    template.kubevirt.io/editable: |
      /objects[0].spec.template.spec.domain.cpu.sockets
      /objects[0].spec.template.spec.domain.cpu.cores
      /objects[0].spec.template.spec.domain.cpu.threads
      /objects[0].spec.template.spec.domain.memory.guest
      /objects[0].spec.template.spec.domain.devices.disks
      /objects[0].spec.template.spec.volumes
      /objects[0].spec.template.spec.networks
    template.openshift.io/bindable: 'false'
    name.os.template.kubevirt.io/rhel8.3: Red Hat Enterprise Linux 8.0 or higher
    openshift.kubevirt.io/pronounceable-suffix-for-name-expression: 'true'
    operator-sdk/primary-resource: openshift-cnv/ssp-kubevirt-hyperconverged
    name.os.template.kubevirt.io/rhel8.4: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.5: Red Hat Enterprise Linux 8.0 or higher
    tags: 'hidden,kubevirt,virtualmachine,linux,rhel'
    name.os.template.kubevirt.io/rhel8.6: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.7: Red Hat Enterprise Linux 8.0 or higher
    template.kubevirt.io/provider-support-level: Full
    name.os.template.kubevirt.io/rhel8.8: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.9: Red Hat Enterprise Linux 8.0 or higher
    name.os.template.kubevirt.io/rhel8.10: Red Hat Enterprise Linux 8.0 or higher
    description: Template for MariaDB Galera cluster based on RHEL8.
    openshift.io/support-url: 'https://github.com/kubevirt/common-templates/issues'
    iconClass: icon-rhel
    openshift.io/provider-display-name: ''
objects:
  - apiVersion: kubevirt.io/v1
    kind: VirtualMachine
    metadata:
      annotations:
        vm.kubevirt.io/validations: |
          [
            {
              "name": "minimal-required-memory",
              "path": "jsonpath::.spec.domain.memory.guest",
              "rule": "integer",
              "message": "This VM requires more memory.",
              "min": 1610612736
            }
          ]
      labels:
        app: '${NAME}'
        vm.kubevirt.io/template: rhel8-mariadb
        vm.kubevirt.io/template.revision: '1'
        vm.kubevirt.io/template.namespace: demo
      name: '${NAME}'
    spec:
      dataVolumeTemplates:
        - apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: '${NAME}'
          spec:
            sourceRef:
              kind: DataSource
              name: '${DATA_SOURCE_NAME}'
              namespace: '${DATA_SOURCE_NAMESPACE}'
            storage:
              resources:
                requests:
                  storage: 30Gi
      running: false
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: medium
            vm.kubevirt.io/os: rhel8
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: '${NAME}'
            kubevirt.io/size: medium
        spec:
          architecture: amd64
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
                - disk:
                    bus: virtio
                  name: rootdisk
                - disk:
                    bus: virtio
                  name: cloudinitdisk
              interfaces:
                - masquerade: {}
                  model: virtio
                  name: default
              rng: {}
            memory:
              guest: 4Gi
          networks:
            - name: default
              pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
            - dataVolume:
                name: '${NAME}'
              name: rootdisk
            - cloudInitNoCloud:
                userData: |-
                  #cloud-config
                  user: cloud-user
                  password: ${CLOUD_USER_PASSWORD}
                  chpasswd: { expire: False }
                  rh_subscription:
                    activation-key: demo
                    org: 10899047
                    auto-attach: true
                  runcmd:
                    - sudo subscription-manager repos --list-enabled
                    - sudo dnf module install -y mariadb/galera
                    - |
                        cat <<EOF | sudo tee /etc/my.cnf
                        #
                        # This group is read both both by the client and the server
                        # use it for options that affect everything
                        #
                        [client-server]

                        [galera]
                        wsrep_on=ON
                        wsrep_cluster_name=rws
                        binlog_format=ROW
                        bind-address=0.0.0.0

                        default-storage-engine=InnoDB
                        innodb_autoinc_lock_mode=2
                        innodb_doublewrite=1
                        query_cache_size=0
                        wsrep_provider=/usr/lib64/galera-4/libgalera_smm.so

                        wsrep_cluster_address=gcomm://

                        wsrep_sst_method=rsync
                        wsrep_dirty_reads=ON
                        wsrep-sync-wait=0

                        wsrep_node_address=${NAME}.demo.svc.cluster.local

                        #
                        # include all files from the config directory
                        #
                        !includedir /etc/my.cnf.d
                        EOF
                  final_message: wael-Cloud-init has completed successfully!
              name: cloudinitdisk
parameters:
  - name: NAME
    description: VM name
    generate: expression
    from: 'rhel8-[a-z0-9]{16}'
  - name: DATA_SOURCE_NAME
    description: Name of the DataSource to clone
    value: rhel8
  - name: DATA_SOURCE_NAMESPACE
    description: Namespace of the DataSource
    value: openshift-virtualization-os-images
  - name: CLOUD_USER_PASSWORD
    description: Randomized password for the cloud-init user cloud-user
    generate: expression
    from: '[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}'